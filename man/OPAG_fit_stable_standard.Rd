% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/OPAG.R
\name{OPAG_fit_stable_standard}
\alias{OPAG_fit_stable_standard}
\title{creates stable standard based on optimizing the growth rate}
\usage{
OPAG_fit_stable_standard(
  Pop_fit,
  Age_fit,
  AgeInt_fit,
  nLx,
  Age_nLx,
  AgeInt_nLx,
  method = "uniform",
  continuous = TRUE
)
}
\arguments{
\item{Pop_fit}{numeric vector of at least two population counts to use for fitting}

\item{Age_fit}{integer vector of lower bounds for age groups of \code{Pop_fit}}

\item{AgeInt_fit}{integer vector of widths of age groups of \code{Pop_fit}}

\item{nLx}{numeric vector of stable population standard}

\item{Age_nLx}{integer vector of lower bounds for age groups of \code{nLx}}

\item{AgeInt_nLx}{optional integer vector of widths of age groups of \code{nLx}, inferred if not given.}

\item{method}{character. Graduation method, default \code{"uniform"}. \code{"mono"} or \code{"pclm"} would also be good choices.}

\item{continuous}{logical. If \code{TRUE} we use the growth adjustment. \code{e^(-age*r)}. If \code{FALSE} we assume \code{r} is geometric growth, and we use \code{(1+r)^age} for the growth adjustment.}
}
\value{
list constaining
\enumerate{
\item \code{Standard} numeric vector, the transformed \code{nLx} to be used for
redistribution in \code{OPAG()}
\item r_opt the output of \code{optimize()}, where \code{min} is the growth parameter, \code{r}
}
}
\description{
The stationary standard, \code{nLx} is transformed into a stable standard by optimizing a growth rate, \code{r} such that the stable standard matches observed population counts in selected age groups. Usually the ages used for fitting are wide age groups in older ages preceding the open age group. The standard output by this function is used by \code{OPAG} to create the standard used to redistribute counts over older age groups up to a specified open age group, such as 100.
}
\details{
The arguments \code{method} and \code{continous} don't have much leverage on the result. In short, the stable population transformation is done by ungrouping \code{nLx} to single ages (if it isn't already), and \code{method} controls which graduation method is used for this, where \code{"uniform"}, \code{"mono"}, \code{"pclm"} are the reasonable choices at this writing. In single ages, the difference between using a geometric \code{r} versus continuous \code{r} are quite small for this task.
}
\examples{
Pop_fit    <- c(85000,37000)
Age_fit    <- c(70,80)
AgeInt_fit <- c(10,10)
nLx        <- downloadnLx(NULL, "Spain","female",1971)
Age_nLx    <- names2age(nLx)

# India Males, 1991
Pop        <- smooth_age_5(pop1m_ind,
                           Age = 0:100,
                           method = "Arriaga")
Pop80      <- groupOAG(Pop, names2age(Pop), 80)
Age        <- names2age(Pop80)
AgeInt     <- age2int(Age, OAvalue = 1)

nLx        <- downloadnLx(NULL, "India","male",1991)
Age_nLx    <- names2age(nLx)
AgeInt_nLx <- age2int(Age_nLx,OAvalue = 1)

Pop_fit    <- groupAges(Pop80, Age, N = 10)[c("60","70")]
Age_fit    <- c(60,70)
AgeInt_fit <- c(10,10)

Standard <- OPAG_fit_stable_standard(
             Pop_fit,
             Age_fit,
             AgeInt_fit,
             nLx = nLx,
             Age_nLx = Age_nLx,
             AgeInt_nLx = AgeInt_nLx,
             method = "uniform",
             continuous = TRUE)

# A visual comparison:
nL60 <- rescale_vector(nLx[Age_nLx >= 60])
St60p <- rescale_vector( Standard$Standard[Age_nLx >= 60] )
ages_plot <- seq(60,100,by=5)
\dontrun{
plot(ages_plot,nL60, type = 'l')
lines(ages_plot, St60p, col = "blue")
}
}
